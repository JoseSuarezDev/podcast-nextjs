{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\programacion2\\\\web\\\\podcasts\\\\pages\\\\podcast.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Link from 'next/link';\nimport Clips from '../components/Clips';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var podcast = this.props.podcast;\n      return __jsx(Clips, {\n        clip: podcast,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var query, idPodcast, _yield$Promise$all, _yield$Promise$all2, reqPodcast, dataPodcast, podcast;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query;\n                idPodcast = query.id;\n                _context.next = 4;\n                return Promise.all([fetch(\"https://api.audioboom.com/audio_clips/\".concat(idPodcast, \".mp3\"))]);\n\n              case 4:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 1);\n                reqPodcast = _yield$Promise$all2[0];\n                _context.next = 9;\n                return reqPodcast.json();\n\n              case 9:\n                dataPodcast = _context.sent;\n                podcast = dataPodcast.body.audio_clip;\n                return _context.abrupt(\"return\", {\n                  podcast: podcast\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/programacion2/web/podcasts/pages/podcast.js"],"names":["Link","Clips","podcast","props","query","idPodcast","id","Promise","all","fetch","reqPodcast","json","dataPodcast","body","audio_clip","React","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;;;;;;;;;;;;;6BAiBa;AAAA,UACGC,OADH,GACe,KAAKC,KADpB,CACGD,OADH;AAGL,aAAO,MAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;;;;;;;;AAjB6BE,gBAAAA,K,QAAAA,K;AACtBC,gBAAAA,S,GAAYD,KAAK,CAACE,E;;uBAEGC,OAAO,CAACC,GAAR,CAAY,CACjCC,KAAK,iDAA0CJ,SAA1C,UAD4B,CAAZ,C;;;;;AAApBK,gBAAAA,U;;uBAImBA,UAAU,CAACC,IAAX,E;;;AAApBC,gBAAAA,W;AACAV,gBAAAA,O,GAAWU,WAAW,CAACC,IAAZ,CAAiBC,U;iDAEzB;AAAEZ,kBAAAA,OAAO,EAAPA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAZca,KAAK,CAACC,S","sourcesContent":["import Link from 'next/link'\r\nimport Clips from '../components/Clips'\r\n\r\nexport default class extends React.Component {\r\n\r\n    static async getInitialProps({query}) {\r\n        let idPodcast = query.id\r\n\r\n        let [reqPodcast] = await Promise.all([\r\n            fetch(`https://api.audioboom.com/audio_clips/${idPodcast}.mp3`)\r\n        ])\r\n\r\n        let dataPodcast = await reqPodcast.json()\r\n        let podcast =  dataPodcast.body.audio_clip\r\n\r\n        return { podcast }\r\n    }\r\n\r\n    render() {\r\n        const { podcast } = this.props\r\n\r\n        return <Clips clip={podcast} />\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}